function signalRInit(){$.connection.hub.url=DRAGDIS.config.domain+"signalr",$.connection.hub.logging=!0,apiHub.client.onFolderListUpdated=function(a){var b=JSON.parse(a.FoldersList);b&&(a.Sender&&DRAGDIS.storage.set("CurrentSender",a.Sender),DRAGDIS.storage.set("FoldersList",b))},apiHub.client.OnUserActiveUpdated=function(a){var b=JSON.parse(a);b&&(DRAGDIS.storage.set("IsConnected",b.Active),DRAGDIS.storage.set("UserActive",b),DRAGDIS.loadUserSettings(),b.Active||($.connection.hub.cleanLogOut=!0,$.connection.hub.stop(),DRAGDIS.storage.set("FoldersList",{}),DRAGDIS.storage.set("userSettings",{})))},apiHub.client.OnUserReset=function(){$.connection.hub.stop(),setTimeout(function(){startHubConnection()},1e3)},apiHub.client.OnUserKill=function(){$.connection.hub.cleanLogOut=!0,$.connection.hub.stop(),DRAGDIS.storage.set("IsConnected",!1),DRAGDIS.storage.set("ConnectionFail",!1),DRAGDIS.storage.set("IsReconnecting",!1),$.connection.hub.connectionRetryDelay=1e3},apiHub.client.OnAppLink=function(a){"object"!=typeof a&&(a=JSON.parse(a)),a.timestamp=(new Date).getTime(),DRAGDIS.storage.set("AppConfig",a)},$.connection.hub.connectionRetryDelay=1e3,$.connection.hub.throwDisconnectError=function(a){a&&console.error(a),4==apiHub.connection.state&&($.connection.hub.connectionRetryDelay>1e4&&(DRAGDIS.storage.set("ConnectionFail",!0),DRAGDIS.storage.set("IsReconnecting",!1)),setTimeout(function(){1!=apiHub.connection.state&&($.connection.hub.connectionRetryDelay<6e5&&($.connection.hub.connectionRetryDelay*=2),startHubConnection())},$.connection.hub.connectionRetryDelay))},$.connection.hub.disconnected(function(){return $.connection.hub.cleanLogOut?($.connection.hub.cleanLogOut=!1,void 0):(DRAGDIS.storage.get("IsConnected",function(a){a&&$.connection.hub.throwDisconnectError("hub.disconnected")}),void 0)}),$.connection.hub.connectionSlow(function(){DRAGDIS.storage.set("IsReconnecting",!0)}),$.connection.hub.reconnecting(function(){DRAGDIS.storage.set("IsReconnecting",!0)}),$.connection.hub.reconnected(function(){DRAGDIS.storage.set("ConnectionFail",!1),DRAGDIS.storage.set("IsReconnecting",!1),DRAGDIS.storage.set("IsConnected",!0),$.connection.hub.connectionRetryDelay=1e3}),startHubConnection()}function startHubConnection(){1==apiHub.connection.state&&$.connection.hub.stop(),DRAGDIS.storage.set("IsReconnecting",!0),$.connection.hub.start().done(function(){DRAGDIS.storage.set("IsReconnecting",!1),apiHub.server.getUserActive().done(function(a){var b=JSON.parse(a);b&&(DRAGDIS.storage.set("UserActive",b),DRAGDIS.storage.set("IsConnected",b.Active))}).fail(function(){4!=apiHub.connection.state&&$.connection.hub.throwDisconnectError("getUserActive() failed")}),apiHub.server.getFolderList().done(function(a){var b=JSON.parse(a);b&&DRAGDIS.storage.set("FoldersList",b)}).fail(function(){4!=apiHub.connection.state&&$.connection.hub.throwDisconnectError("getFolderList() failed")}),DRAGDIS.storage.set("ConnectionFail",!1),DRAGDIS.storage.set("IsReconnecting",!1),$.connection.hub.connectionRetryDelay=1e3,$(window).one("unload",function(){$.connection.hub.stop()}),DRAGDIS.loadUserSettings()}).fail(function(){DRAGDIS.storage.get("IsConnected",function(a){a&&4!=apiHub.connection.state&&$.connection.hub.throwDisconnectError("hub.start() failed on init")})})}function refreshHubConnection(){4==apiHub.connection.state&&$.connection.hub.start().done(function(){DRAGDIS.storage.set("ConnectionFail",!1),DRAGDIS.storage.set("IsReconnecting",!1),$.connection.hub.connectionRetryDelay=1e3}).fail(function(){DRAGDIS.storage.get("IsConnected",function(a){a&&4!=apiHub.connection.state&&$.connection.hub.throwDisconnectError("hub.start() failed on refreshHubConnection")})})}var apiHub=$.connection.apiHub,DomainInterval=setInterval(function(){""!=DRAGDIS.config.domain&&(clearInterval(DomainInterval),signalRInit())},100);