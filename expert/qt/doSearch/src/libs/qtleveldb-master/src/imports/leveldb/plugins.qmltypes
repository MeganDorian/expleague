import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump QtLevelDB 1.0'

Module {
    dependencies: []
    Component {
        name: "QLevelDBBatch"
        prototype: "QObject"
        exports: ["Batch 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Signal {
            name: "batchWritten"
            Parameter { name: "keys"; type: "QSet<QString>" }
        }
        Method {
            name: "del"
            type: "QLevelDBBatch*"
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "put"
            type: "QLevelDBBatch*"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "clear"; type: "QLevelDBBatch*" }
        Method { name: "write"; type: "bool" }
    }
    Component {
        name: "QLevelDBOptions"
        prototype: "QObject"
        exports: ["Options 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "CompressionType"
            values: {
                "NoCompression": 0,
                "SnappyCompression": 1
            }
        }
        Property { name: "createIfMissing"; type: "bool" }
        Property { name: "errorIfExists"; type: "bool" }
        Property { name: "paranoidChecks"; type: "bool" }
        Property { name: "compressionType"; type: "CompressionType" }
    }
    Component {
        name: "QQmlLevelDB"
        prototype: "QObject"
        exports: ["LevelDB 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QUrl" }
        Property { name: "status"; type: "QLevelDB::Status"; isReadonly: true }
        Property { name: "lastError"; type: "string"; isReadonly: true }
        Property { name: "opened"; type: "bool"; isReadonly: true }
        Property { name: "options"; type: "QLevelDBOptions"; isReadonly: true; isPointer: true }
        Signal {
            name: "keyValueChanged"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method { name: "batch"; type: "QLevelDBBatch*" }
        Method {
            name: "del"
            type: "bool"
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "defaultValue"; type: "QVariant" }
        }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "put"
            type: "bool"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "putSync"
            type: "bool"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "destroyDB"
            type: "bool"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "repairDB"
            type: "bool"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "readStream"
            type: "bool"
            Parameter { name: "callback"; type: "QJSValue" }
            Parameter { name: "startKey"; type: "string" }
            Parameter { name: "length"; type: "int" }
        }
        Method {
            name: "readStream"
            type: "bool"
            Parameter { name: "callback"; type: "QJSValue" }
            Parameter { name: "startKey"; type: "string" }
        }
        Method {
            name: "readStream"
            type: "bool"
            Parameter { name: "callback"; type: "QJSValue" }
        }
    }
    Component {
        name: "QQmlLevelDBSettings"
        prototype: "QQmlLevelDB"
        exports: ["Settings 1.0"]
        exportMetaObjectRevisions: [0]
    }
}
